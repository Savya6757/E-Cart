{"version":3,"file":"static/js/258.15a08eb2.chunk.js","mappings":"oJAcA,IAZsB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACvB,OACE,SAAC,IAAD,WACE,SAAC,IAAD,CAAKC,UAAU,4BAAf,UACE,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACGH,U,0KC0FX,UAxFuB,WACrB,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA8CN,EAAAA,EAAAA,UAAS,IAAvD,eAAOO,EAAP,KAAwBC,EAAxB,KACA,GAA8BR,EAAAA,EAAAA,UAAS,MAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAqCC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,YAA1DC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,SAElBC,EAAWZ,EAASa,OAASb,EAASa,OAAOC,MAAM,KAAK,GAAK,KAEnEC,EAAAA,EAAAA,YAAU,WACJJ,GACFT,EAASU,KAEV,CAACV,EAAUS,EAAUC,IAWxB,OACE,UAAC,IAAD,YACE,oCACCd,IAAW,SAAC,IAAD,CAASkB,QAAQ,SAAjB,SAA2BlB,IACtCY,IAAS,SAAC,IAAD,CAASM,QAAQ,SAAjB,SAA2BN,IACpCD,IAAW,SAAC,IAAD,KACZ,UAAC,IAAD,CAAMQ,SAfY,SAACC,GACrBA,EAAEC,iBACEzB,IAAaE,EACfG,EAAW,0BAEXK,GAASgB,EAAAA,EAAAA,IAAa9B,EAAME,EAAOE,KAUnC,WACE,UAAC,UAAD,CAAY2B,UAAU,OAAtB,WACE,SAAC,UAAD,oBACA,SAAC,YAAD,CACEC,KAAK,OACLC,YAAY,aACZC,MAAOlC,EACPmC,SAAU,SAACP,GAAD,OAAO3B,EAAQ2B,EAAEQ,OAAOF,cAGtC,UAAC,UAAD,CAAYH,UAAU,QAAtB,WACE,SAAC,UAAD,6BACA,SAAC,YAAD,CACEC,KAAK,QACLC,YAAY,cACZC,MAAOhC,EACPiC,SAAU,SAACP,GAAD,OAAOzB,EAASyB,EAAEQ,OAAOF,cAGvC,UAAC,UAAD,CAAYH,UAAU,WAAtB,WACE,SAAC,UAAD,wBACA,SAAC,YAAD,CACEC,KAAK,WACLC,YAAY,iBACZC,MAAO9B,EACP+B,SAAU,SAACP,GAAD,OAAOvB,EAAYuB,EAAEQ,OAAOF,cAG1C,UAAC,UAAD,CAAYH,UAAU,kBAAtB,WACE,SAAC,UAAD,gCACA,SAAC,YAAD,CACEC,KAAK,WACLC,YAAY,mBACZC,MAAO5B,EACP6B,SAAU,SAACP,GAAD,OAAOrB,EAAmBqB,EAAEQ,OAAOF,cAGjD,SAAC,IAAD,CAAQF,KAAK,SAASN,QAAQ,UAA9B,0BAKF,SAAC,IAAD,CAAK9B,UAAU,OAAf,UACE,UAAC,IAAD,8BACmB,KACjB,SAAC,EAAAyC,KAAD,CAAMC,GAAIhB,EAAQ,0BAAsBA,GAAa,SAArD","sources":["components/FormContainer.js","pages/RegisterScreen.js"],"sourcesContent":["import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/ui/Message\";\r\nimport Loader from \"../components/ui/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { registerUser } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, userInfo } = useSelector((state) => state.userAuth);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(registerUser(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>Login</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n"],"names":["children","className","xs","md","useState","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","location","useLocation","navigate","useNavigate","dispatch","useDispatch","useSelector","state","userAuth","loading","error","userInfo","redirect","search","split","useEffect","variant","onSubmit","e","preventDefault","registerUser","controlId","type","placeholder","value","onChange","target","Link","to"],"sourceRoot":""}