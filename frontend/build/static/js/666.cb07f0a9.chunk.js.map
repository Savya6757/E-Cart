{"version":3,"file":"static/js/666.cb07f0a9.chunk.js","mappings":"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","sources":["actions/orderActions.js","../node_modules/react-bootstrap/esm/Table.js","pages/ProfileScreen.js"],"sourcesContent":["import {\r\n  orderCreateAction,\r\n  orderDetailsAction,\r\n  orderListAction,\r\n  orderPayAction,\r\n} from \"../slices/order-slice\";\r\nimport axios from \"axios\";\r\n\r\nexport const createdOrder = (order) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userAuth: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`api/orders`, order, config);\r\n      dispatch(\r\n        orderCreateAction.orderCreateSuccess({\r\n          order: data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        orderCreateAction.orderCreateFail({\r\n          error:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const getOrderDetails = (id) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userAuth: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/orders/${id}`, config);\r\n      dispatch(\r\n        orderDetailsAction.orderDetailsSuccess({\r\n          order: data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        orderDetailsAction.orderDetailsFail({\r\n          error:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const orderCreateReset = () => {\r\n  return (dispatch) => {\r\n    dispatch(orderCreateAction.orderReset({}));\r\n  };\r\n};\r\n\r\nexport const orderDetailsReset = () => {\r\n  return (dispatch) => {\r\n    dispatch(orderDetailsAction.orderReset({}));\r\n  };\r\n};\r\nexport const orderPayReset = () => {\r\n  return (dispatch) => {\r\n    dispatch(orderPayAction.orderReset({}));\r\n  };\r\n};\r\n\r\nexport const orderListReset = () => {\r\n  return (dispatch) => {\r\n    dispatch(orderListAction.orderReset({}));\r\n  };\r\n};\r\n\r\nexport const payOrder = (orderId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userAuth: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(`/api/orders/${orderId}/pay`, {}, config);\r\n      dispatch(\r\n        orderPayAction.orderPaySuccess({\r\n          order: data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        orderPayAction.orderPayFail({\r\n          error:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const listMyOrders = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userAuth: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n      dispatch(\r\n        orderListAction.orderListSuccess({\r\n          orders: data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        orderListAction.orderListFail({\r\n          error:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/ui/Message\";\r\nimport Loader from \"../components/ui/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { listMyOrders, orderDetailsReset } from \"../actions/orderActions\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails);\r\n\r\n  const { userInfo, success } = useSelector((state) => state.userAuth);\r\n\r\n  const {\r\n    loading: loadingOrders,\r\n    error: errorOrders,\r\n    orders,\r\n  } = useSelector((state) => state.orderList);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    \r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(orderDetailsReset());\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, userInfo, user, navigate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={4}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>New Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={8}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"names":["createdOrder","order","dispatch","getState","userInfo","userAuth","config","headers","Authorization","token","axios","data","orderCreateAction","error","response","message","getOrderDetails","id","orderDetailsAction","orderCreateReset","orderDetailsReset","orderPayReset","orderPayAction","payOrder","orderId","listMyOrders","orderListAction","orders","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","useState","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setMessage","useDispatch","useSelector","state","userDetails","loading","user","success","orderList","loadingOrders","errorOrders","navigate","useNavigate","useEffect","getUserDetails","Row","Col","md","Message","Loader","Form","onSubmit","e","preventDefault","updateUserProfile","_id","controlId","type","placeholder","value","onChange","target","Button","map","createdAt","substring","totalPrice","isPaid","paidAt","style","color","isDelivered","deliveredAt","to"],"sourceRoot":""}