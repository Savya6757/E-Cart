{"version":3,"file":"static/js/123.59f948a1.chunk.js","mappings":"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","sources":["actions/cartActions.js","actions/orderActions.js","components/CheckoutSteps.js","components/FormContainer.js","pages/ShippingScreen.js"],"sourcesContent":["import { cartItemsAction } from \"../slices/cart-slice\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToCart = (id, qty) => {\r\n  return async (dispatch, getState) => {\r\n    const res = await axios.get(`/api/products/${id}`);\r\n    const data = res.data;\r\n    dispatch(\r\n      cartItemsAction.addItem({\r\n        item: {\r\n          product: data._id,\r\n          name: data.name,\r\n          image: data.image,\r\n          price: data.price,\r\n          countInStock: data.countInStock,\r\n          qty,\r\n        },\r\n      })\r\n    );\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cartItems.items));\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (id) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(\r\n      cartItemsAction.removeItem({\r\n        product: id,\r\n      })\r\n    );\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cartItems.items));\r\n  };\r\n};\r\n\r\nexport const saveShippingAddress = (data) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      cartItemsAction.saveShippingAddress({\r\n        data: data,\r\n      })\r\n    );\r\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n  };\r\n};\r\n\r\nexport const savePaymentMethod = (data) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      cartItemsAction.savePaymentMethod({\r\n        data: data,\r\n      })\r\n    );\r\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n  };\r\n};\r\n\r\nexport const calculatePrices = () => {\r\n  return async (dispatch) => {\r\n    dispatch(cartItemsAction.calculateTotal({}));\r\n  };\r\n};\r\n","import {\r\n  orderCreateAction,\r\n  orderDetailsAction,\r\n  orderListAction,\r\n  orderPayAction,\r\n} from \"../slices/order-slice\";\r\nimport axios from \"axios\";\r\n\r\nexport const createdOrder = (order) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userAuth: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`api/orders`, order, config);\r\n      dispatch(\r\n        orderCreateAction.orderCreateSuccess({\r\n          order: data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        orderCreateAction.orderCreateFail({\r\n          error:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const getOrderDetails = (id) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userAuth: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/orders/${id}`, config);\r\n      dispatch(\r\n        orderDetailsAction.orderDetailsSuccess({\r\n          order: data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        orderDetailsAction.orderDetailsFail({\r\n          error:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const orderCreateReset = () => {\r\n  return (dispatch) => {\r\n    dispatch(orderCreateAction.orderReset({}));\r\n  };\r\n};\r\n\r\nexport const orderDetailsReset = () => {\r\n  return (dispatch) => {\r\n    dispatch(orderDetailsAction.orderReset({}));\r\n  };\r\n};\r\nexport const orderPayReset = () => {\r\n  return (dispatch) => {\r\n    dispatch(orderPayAction.orderReset({}));\r\n  };\r\n};\r\n\r\nexport const orderListReset = () => {\r\n  return (dispatch) => {\r\n    dispatch(orderListAction.orderReset({}));\r\n  };\r\n};\r\n\r\nexport const payOrder = (orderId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userAuth: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(`/api/orders/${orderId}/pay`, {}, config);\r\n      dispatch(\r\n        orderPayAction.orderPaySuccess({\r\n          order: data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        orderPayAction.orderPayFail({\r\n          error:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const listMyOrders = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userAuth: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n      dispatch(\r\n        orderListAction.orderListSuccess({\r\n          orders: data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        orderListAction.orderListFail({\r\n          error:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { orderCreateReset, orderDetailsReset } from \"../actions/orderActions\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const { shippingAddress } = useSelector((state) => state.cartItems);\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    dispatch(orderDetailsReset());\r\n    dispatch(orderCreateReset());\r\n  }, [dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    navigate(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n"],"names":["addToCart","id","qty","dispatch","getState","axios","res","data","cartItemsAction","item","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cartItems","items","removeFromCart","saveShippingAddress","savePaymentMethod","calculatePrices","createdOrder","order","userInfo","userAuth","config","headers","Authorization","token","orderCreateAction","error","response","message","getOrderDetails","orderDetailsAction","orderCreateReset","orderDetailsReset","orderPayReset","orderPayAction","payOrder","orderId","listMyOrders","orderListAction","orders","step1","step2","step3","step4","className","to","disabled","children","xs","md","history","shippingAddress","useSelector","state","useState","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","useDispatch","navigate","useNavigate","useEffect","onSubmit","e","preventDefault","controlId","type","placeholder","value","required","onChange","target","variant"],"sourceRoot":""}